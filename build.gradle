plugins {
    id 'java-base'
}

wrapper {
    gradleVersion = gradlewVersion
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    group = 'com.mjc.school'

    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    repositories {
        mavenCentral()
    }
    dependencies {

        //Swagger
        implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'

        //Spring Starters v2.7.15
        implementation "org.springframework.boot:spring-boot-starter-web:${springStarterVersion}"
        implementation "org.springframework.boot:spring-boot-starter-test:${springStarterVersion}"
        implementation "org.springframework.boot:spring-boot-starter-validation:${springStarterVersion}"
        implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springStarterVersion}"

        compileOnly group: 'javax', name: 'javaee-api', version: '8.0.1'
        implementation group: 'org.hibernate', name: 'hibernate-entitymanager', version: '5.6.15.Final'

        //Lombok v1.18.26
        compileOnly "org.projectlombok:lombok:$lombokVersion"//
        annotationProcessor "org.projectlombok:lombok:$lombokVersion"
        implementation group: 'org.projectlombok', name: 'lombok-mapstruct-binding', version: '0.2.0'

        //Testing
        testImplementation "org.junit.jupiter:junit-jupiter-api:$jupiterVersion"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jupiterVersion"
        testImplementation "com.tngtech.archunit:archunit-junit5:$archUnitVersion"
        testImplementation "com.tngtech.archunit:archunit:$archUnitVersion"
        testImplementation 'org.assertj:assertj-core:3.24.2'

        //MapStruct
        annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
        implementation "org.mapstruct:mapstruct:$mapstructVersion"

        //H2 DB
        testImplementation "com.h2database:h2:2.2.220"
        implementation "com.h2database:h2:2.2.220"

        //Servlet javax
        implementation 'javax.servlet:javax.servlet-api:4.0.1'
    }

    test {
        useJUnitPlatform()
    }
}

task repack(type: Jar, dependsOn: ':module-main:build') {
    if (findProject(':module-main') != null) {
        entryCompression = ZipEntryCompression.STORED
        def buildJar = zipTree("${project(':module-main').buildDir}/libs/module-main.jar")
        from(buildJar) { into('/') }
        manifest {
            attributes(
                    'Main-Class': 'com.mjc.school.Main'
            )
        }
    }
}